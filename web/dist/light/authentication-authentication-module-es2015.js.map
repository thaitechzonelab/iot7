{"version":3,"sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"names":[],"mappings":"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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n@NgModule({\r\n  declarations: [SigninComponent, SignupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: [''],\r\n      password: ['']\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <span class=\"login100-form-title pb-5\">\r\n          Login\r\n        </span>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Username</mat-label>\r\n              <input matInput formControlName=\"username\" />\r\n              <mat-icon matSuffix>face</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Password</mat-label>\r\n              <input matInput type=\"password\" formControlName=\"password\">\r\n              <mat-icon matSuffix>vpn_key</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n          <div class=\"form-check\">\r\n            <label class=\"form-check-label\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n              <span class=\"form-check-sign\">\r\n                <span class=\"check\"></span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-login100-form-btn\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center p-t-30 p-b-20\">\r\n          <span class=\"txt3\">\r\n            or <a routerLink=\"/authentication/signup\">\r\n              sign up\r\n            </a> using\r\n          </span>\r\n        </div>\r\n        <div class=\"login100-form-social flex-c-m\">\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-01.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required]\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <span class=\"login100-form-title p-b-30\">\r\n          Register\r\n        </span>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput formControlName=\"username\" required>\r\n          <mat-icon matSuffix>face</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\r\n            Username is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" required>\r\n          <mat-icon matSuffix>mail</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('email').hasError('required') || loginForm.get('email').touched\">\r\n            Please enter a valid email address\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n          <mat-icon matSuffix (click)=\"hide = !hide\">\r\n            {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Confirm Password</mat-label>\r\n          <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n          <mat-icon matSuffix (click)=\"chide = !chide\">\r\n            {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('cpassword').hasError('required')\">\r\n            Confirm Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n          <div>\r\n            <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                Login\r\n              </a></span>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-login100-form-btn\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center p-t-30 p-b-20\">\r\n          <span class=\"txt2\">\r\n            or sign up using\r\n          </span>\r\n        </div>\r\n        <div class=\"login100-form-social flex-c-m\">\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-02.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"],"sourceRoot":"webpack:///"}